import { apiSlice } from "../../app/api/apiSlice";
import { setCredentials } from "./authSlice";
// import { setCredentials } from "./authSlice";
/*  
    We inject auth-related api here using the injectEndpoints function into our apiSlice
    This is useful for code splitting and readability
*/
export const authApiSlice = apiSlice.injectEndpoints({ //Any auth api is injected into our main api slice here
    endpoints: builder => ({ //Define endpoints that will be used by frontend
        login: builder.mutation({
            query: credentials => ({ //credentials (i.e email)
                url: '/api/auth/create',
                method: 'POST',
                body: credentials
            }),
            invalidatesTags: ["Auth"]
        }),
        verify: builder.mutation({
            query: credentials => ({
                url: "api/auth/verify",
                method: "POST",
                body: credentials
            }),
            invalidatesTags: ["Auth"]
        }),
        refresh: builder.mutation({
            query: () => "api/auth/refresh",
            async onQueryStarted(arg, {dispatch, queryFulfilled}) { //if query succesful, we automatically set our new state
                try {
                    const {data} = await queryFulfilled
                    dispatch(setCredentials({token: data.token}))
                } catch (err) {
                    console.log(err)
                }
            },
            providesTags: ["Auth"],
            invalidatesTags: ["Auth", "Product", "Order"],
        })

    })
})

export const {//custom react hook auto-generated by RTK Query
    useLoginMutation, 
    useVerifyMutation,
    useRefreshMutation
} = authApiSlice

